{"version":3,"file":"static/js/19.3865d396.chunk.js","mappings":"qRAEaA,EAAa,yHACbC,EAAY,yIACZC,EAAc,+FACrBC,EAAgB,yBAETC,EAASC,EAAAA,KAAaC,MAAM,CACrCC,KAAMF,EAAAA,KAAaG,SAASL,GAAeM,QAAQT,EAAYC,GAC/DS,OAAQL,EAAAA,KAAaG,SAASL,GAAeM,QAAQ,6EAA8EP,KAG1HS,EAAaN,EAAAA,GAAW,CACjCE,KAAMF,EAAAA,KAAaO,IAAI,KAAKJ,SAAS,0BACrCK,MAAOR,EAAAA,KACFQ,MAAM,yBACND,IAAI,KACJJ,SAAS,qBACdM,SAAUT,EAAAA,KAAaO,IAAI,KAAKJ,SAAS,yB,qLCfhCO,GAAWC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,0KAGR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IACI,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,WAAWC,KAAvB,IAIN,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,I,SCwFd,EA5FkB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MAmBjB,OACI,SAAC,KAAD,CACIC,cARc,CAClBpB,KAAM,GACNM,MAAO,GACPC,SAAU,IAMNc,iBAAkBjB,EAAAA,GAFtB,UAII,SAACkB,EAAA,EAAD,CACIC,UAAU,OACVC,GAAI,CACAC,QAAS,OACTC,WAAY,SACZC,SAAU,EACVC,UAAW,QANnB,UAQI,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACI,SAACR,EAAA,EAAD,CACIE,GAAI,CACAO,UAAW,EACXN,QAAS,OACTO,cAAe,SACfN,WAAY,UALpB,UAQI,UAACJ,EAAA,EAAD,CACIC,UAAU,OACVU,SAzCH,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAAcC,SACvBC,EAAO,CACTjC,MAAO8B,EAAK9B,MAAMkC,MAClBjC,SAAU6B,EAAK7B,SAASiC,OAE5BtB,GAASuB,EAAAA,EAAAA,IAAMF,IACfL,EAAEQ,OAAOC,OACZ,EA8BmB,WAII,SAACrB,EAAA,EAAD,CAAKE,GAAI,CAAEoB,GAAI,GAAf,UACI,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAIJ,SAACC,EAAA,EAAD,CACIC,OAAO,SACPC,aAAa,QACbjD,KAAK,QACLC,UAAQ,EACRiD,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,WAAS,KAEb,SAACN,EAAA,EAAD,CACIC,OAAO,SACPC,aAAa,WACbjD,KAAK,WACLC,UAAQ,EACRiD,WAAS,EACTC,GAAG,WACHC,MAAM,WACNC,WAAS,EACTC,KAAK,cAET,SAACC,EAAA,EAAD,CACID,KAAK,SACLE,KAAK,IACLN,WAAS,EACTJ,QAAQ,YACRtB,GAAI,CAAEiC,GAAI,EAAGC,GAAI,GALrB,qBASA,SAAClD,EAAD,CAAUmD,GAAG,SAAb,sDAS3B,E,UCtFD,EARkB,WACd,OACI,SAAC,IAAD,WACI,SAAC,EAAD,KAGX,C","sources":["constants.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const NAME_MATCH = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nexport const nameError = \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const numberError = \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\";\nconst requiredError = \"This field is required\";\n\nexport const schema = yup.object().shape({\n    name: yup.string().required(requiredError).matches(NAME_MATCH, nameError),\n    number: yup.string().required(requiredError).matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, numberError),\n});\n\nexport const authSchema = yup.object({\n    name: yup.string().max(255).required('First name is required'),\n    email: yup.string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n    password: yup.string().max(255).required('Password is required'),\n});","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FormLink = styled(Link)`\n    font-family: 'Arial';\n    text-decoration: none;\n    color: ${p => p.theme.colors.blue};\n    transition: ${p => p.theme.transition.color};\n\n    :hover,\n    focus {\n    color: ${p => p.theme.colors.accent};\n    }\n`;","import { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { Container, Box, TextField, Button, Typography } from '@mui/material';\nimport { logIn } from \"redux/auth/authOperations\";\nimport { authSchema } from \"constants\";\nimport { FormLink } from \"./LoginForm.styled\";\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget.elements;\n        const user = {\n            email: form.email.value,\n            password: form.password.value,\n        };\n        dispatch(logIn(user));\n        e.target.reset();\n    };\n\n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={authSchema}\n        >\n            <Box\n                component=\"main\"\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexGrow: 1,\n                    minHeight: '100%',\n                }}>\n                <Container maxWidth=\"sm\">\n                    <Box\n                        sx={{\n                            marginTop: 6,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Box\n                            component=\"form\"\n                            onSubmit={handleSubmit}\n                        >\n                            <Box sx={{ my: 2 }}>\n                                <Typography variant=\"h4\">\n                                    Log in\n                                </Typography>\n                            </Box>\n                            <TextField\n                                margin=\"normal\"\n                                autoComplete=\"email\"\n                                name=\"email\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email\"\n                                autoFocus\n                            />\n                            <TextField\n                                margin=\"normal\"\n                                autoComplete=\"password\"\n                                name=\"password\"\n                                required\n                                fullWidth\n                                id=\"password\"\n                                label=\"Password\"\n                                autoFocus\n                                type=\"password\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                size=\"l\"\n                                fullWidth\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 }}\n                            >\n                                Log In\n                            </Button>\n                            <FormLink to=\"/login\">\n                                Do'nt have an account? Sign up\n                            </FormLink>\n                        </Box>\n                    </Box>\n                </Container>\n            </Box>\n        </Formik>\n    );\n};\n\nexport default LoginForm;","import LoginForm from \"components/LoginForm\";\nimport { Box } from \"components/Box\";\n\nconst LoginPage = () => {\n    return (\n        <Box>\n            <LoginForm />\n        </Box>\n    );\n};\n\nexport default LoginPage;"],"names":["NAME_MATCH","nameError","numberError","requiredError","schema","yup","shape","name","required","matches","number","authSchema","max","email","password","FormLink","styled","Link","p","theme","colors","blue","transition","color","accent","dispatch","useDispatch","initialValues","validationSchema","Box","component","sx","display","alignItems","flexGrow","minHeight","Container","maxWidth","marginTop","flexDirection","onSubmit","e","preventDefault","form","currentTarget","elements","user","value","logIn","target","reset","my","Typography","variant","TextField","margin","autoComplete","fullWidth","id","label","autoFocus","type","Button","size","mt","mb","to"],"sourceRoot":""}