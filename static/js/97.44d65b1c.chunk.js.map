{"version":3,"file":"static/js/97.44d65b1c.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Loader/Loader.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","constants.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n    color,\n    space,\n    layout,\n    flexbox,\n    grid,\n    background,\n    border,\n    position,\n    shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n    color,\n    space,\n    layout,\n    flexbox,\n    grid,\n    background,\n    border,\n    position,\n    shadow,\n);","import { Oval } from 'react-loader-spinner';\nimport { Box } from 'components/Box';\n\nconst Loader = () => {\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Oval\n                height=\"20\"\n                width=\"20\"\n                color=\"#ef0119\"\n                ariaLabel = 'oval-loading'\n            />\n        </Box>\n    );\n};\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    padding-bottom: ${p => p.theme.space[5]}px;\n    font-size: ${p => p.theme.fontSizes.l};\n    text-align: center;\n    color: ${p => p.theme.colors.text};\n`;","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n    return (\n        <Box as=\"section\" pb={4} pt={4}>\n            <Title>{title}</Title>\n            {children}\n        </Box>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default Section;","import * as yup from 'yup';\n\nexport const NAME_MATCH = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nexport const nameError = \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const numberError = \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\";\nconst requiredError = \"This field is required\";\n\nexport const schema = yup.object().shape({\n    name: yup.string().required(requiredError).matches(NAME_MATCH, nameError),\n    number: yup.string().required(requiredError).matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, numberError),\n});","import { Field } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const Input = styled(Field)`\n    width: 100%;\n    height: 40px;\n    padding: ${p => p.theme.space[3]}px;\n    margin-bottom: ${p => p.theme.space[4]}px;\n    margin-top: ${p => p.theme.space[2]}px;\n    outline: none;\n    border: ${p => p.theme.borders.none};\n    border-radius: ${p => p.theme.radii.normal};\n\n    :hover, :focus {\n        border: ${p => p.theme.borders.normal};\n        border-color: ${p => p.theme.colors.bgcButton};\n    }\n`;\n\nexport const Label = styled.label`\n    font-size: ${p => p.theme.fontSizes.m};\n    font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Error = styled.div`\n    margin-bottom: ${p => p.theme.space[4]}px;\n    font-size: ${p => p.theme.fontSizes.s};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    color: ${p => p.theme.colors.accent};\n`;\n\nexport const AddBtn = styled.button`\n    width: 150px;\n    height: 40px;\n    margin: 20px auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: ${p => p.theme.borders.none};\n    border-radius: ${p => p.theme.radii.normal};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    background-color: ${p => p.theme.colors.bgcStat};\n    box-shadow: -4px 4px 59px 0px rgba(50,140,17,1);\n    cursor: pointer;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1), \n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover, :focus {\n        background-color: ${p => p.theme.colors.bgcButton};\n        color: ${p => p.theme.colors.white};\n        transform: scale(1.1);\n    }\n`;","import { Formik, Form, ErrorMessage } from \"formik\";\nimport { useGetContactsQuery, useAddContactMutation } from \"redux/contactsSlice\";\nimport { toast } from 'react-toastify';\nimport Loader from \"components/Loader\";\nimport Section from \"components/Section\";\nimport { NAME_MATCH, nameError, numberError, schema } from \"constants\";\nimport { Input, Label, Error, AddBtn } from './ContactForm.styled';\n\nconst initialValues = {\n    name: '',\n    number: '',\n};\n\nconst ContactForm = () => {\n    const { data: contacts } = useGetContactsQuery();\n    const [addContact, { isLoading }] = useAddContactMutation();\n\n    const handleSubmit = async e => {\n        try {\n            e.preventDefault();\n            const form = e.currentTarget.elements;\n            const name = form.name.value;\n            const number = form.number.value;\n        \n            const matcheContactName = contacts.find(contact =>\n                contact.name.toLowerCase() === name.toLowerCase());\n            const newContact = {\n                name,\n                phone: number,\n            };\n\n            if (matcheContactName) {\n                toast.warn(`Sorry, ${name} is already in your contacts!`);\n                return;\n            } else {\n                await addContact(newContact);\n                toast.success('Contact added successfully!');\n                e.target.reset();\n            }\n        } catch (error) {\n            toast.error('Something is wrong. Try again!');\n        }\n    };\n\n\n    return (\n        <Section >\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n            >\n                <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                    <Label htmlFor=\"name\">Name\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            pattern={NAME_MATCH}\n                            required\n                        />\n                        <ErrorMessage name=\"name\" render={msg => <Error>{nameError}</Error>} />\n                    </Label>\n                    <Label htmlFor=\"number\">Number\n                        <Input\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            required\n                        />\n                        <ErrorMessage name=\"number\" render={msg => <Error>{numberError}</Error>} />\n                    </Label>\n                    <AddBtn type=\"submit\">{isLoading ? <Loader /> : 'Add contact'}</AddBtn>\n                </Form>\n            </Formik>\n        </Section>\n    );\n};\n\nexport default ContactForm;","import styled from \"styled-components\";\n\nexport const FilterLabel = styled.label`\n    font-size: ${p => p.theme.fontSizes.m};\n    font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const FilterText = styled.input`\n    width: 100%;\n    height: 40px;\n    padding: ${p => p.theme.space[3]}px;\n    margin-bottom: ${p => p.theme.space[5]}px;\n    margin-top: ${p => p.theme.space[3]}px;\n    outline: none;\n    border: ${p => p.theme.borders.none};\n    border-radius: ${p => p.theme.radii.normal};\n\n    :hover, :focus {\n        border: ${p => p.theme.borders.normal};\n        border-color: ${p => p.theme.colors.bgcButton};\n    }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter, selectFilter } from 'redux/filterSlice';\nimport { FilterLabel, FilterText } from './Filter.styled';\n\nconst Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <FilterLabel>Find contacts by name\n            <FilterText\n                type=\"text\"\n                value={filter}\n                onChange={e => dispatch(changeFilter(e.target.value))} />\n        </FilterLabel>\n    );\n};\n\nexport default Filter;","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n    width: 150px;\n    height: 40px;\n    border: ${p => p.theme.borders.none};\n    border-radius: ${p => p.theme.radii.normal};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    background-color: ${p => p.theme.colors.delBtn};\n    cursor: pointer;\n    transition: background-color 250ms cubic-bezier(0.2, 0, 0, 0.7),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover:not(:disabled), :focus:not(:disabled) {\n        background-color: ${p => p.theme.colors.accent};\n        color: ${p => p.theme.colors.white};\n        transform: scale(1.1);\n    }\n`;","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation} from \"redux/contactsSlice\";\nimport Loader from \"components/Loader\";\nimport { Button} from \"./Contact.styled\";\n\n\nconst Contact = ({ id, name, phone }) => { \n    const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n    const handleDelete = async () => {\n        try {\n            await deleteContact(id);\n            toast.success('Contact deleted successfully!');\n        } catch (error) {\n            toast.error('Something is wrong. Try again!');\n        }\n    };\n\n    return (\n        <>\n            <p>{name}: {phone}</p>\n            <Button\n                type=\"button\"\n                onClick={handleDelete}\n                disabled={isDeleting}\n            >{isDeleting ? <Loader /> : 'Delete contact'}\n            </Button>\n        </>\n    );\n};\n\nContact.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n};\n\nexport default Contact;","import styled from \"styled-components\";\n\nexport const Contacts = styled.ul`\n    list-style-type: disc;\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: ${p => p.theme.space[4]}px;\n    font-size: ${p => p.theme.fontSizes.m};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    color: ${p => p.theme.colors.text};\n`;\n\nexport const EmptyList = styled.p`\n    font-size: ${p => p.theme.fontSizes.l};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    color: ${p => p.theme.colors.accent};\n    text-align: center;\n`;","import { useSelector } from 'react-redux';\nimport { Oval } from 'react-loader-spinner';\nimport { useGetContactsQuery} from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/filterSlice';\nimport Contact from 'components/Contact';\nimport { Box } from 'components/Box';\nimport { Contacts, ContactItem, EmptyList } from './ContactList.styled';\n\n\nconst ContactList = () => {\n    const { data: contacts, isFetching } = useGetContactsQuery();\n    const filter = useSelector(selectFilter);\n\n    const filteredContacts = contacts?.filter(({ name }) =>\n        name.toLowerCase().includes(filter));\n\n    return (\n        <Contacts>\n            {isFetching && (\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Oval\n                        height=\"80\"\n                        width=\"80\"\n                        color=\"#ef0119\"\n                        ariaLabel='oval-loading'\n                    />\n                </Box>\n            )}\n            {filteredContacts?.length > 0 && !isFetching && (filteredContacts.sort((firstName, secondName) =>\n                firstName.name.localeCompare(secondName.name)).map(({ id, name, phone }) => (\n                    <ContactItem key={id}>\n                        <Contact id={id} name={name} phone={phone} />\n                    </ContactItem>\n                ))\n            )}\n            {filteredContacts?.length === 0 && (<EmptyList>Your contact list is empty</EmptyList>)}\n        </Contacts>\n    );\n};\n\nexport default ContactList;","import styled from \"styled-components\";\n\nexport const PageTitle = styled.h1`\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.xl};\n    color: ${p => p.theme.colors.text};\n`;","import { Box } from \"components/Box\";\nimport ContactForm from \"components/ContactForm\";\nimport Section from \"components/Section\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\nimport { PageTitle } from \"./Contacts.styled\";\n\nconst Contacts = () => {\n    return (\n        <Box as=\"main\"\n            maxWidth=\"600px\"\n            m=\"32px auto\"\n            p={4}\n            borderRadius=\"8px\"\n            boxShadow=\"0px 5px 10px 2px rgba(45, 90, 124, 0.2)\"\n            backgroundColor=\"bgc\"\n        >\n            <PageTitle>Phonebook</PageTitle>\n            <ContactForm />\n            <Section title=\"Contacts\">\n                <Filter />\n                <ContactList />\n            </Section>\n        </Box>\n    );\n};\n\nexport default Contacts;"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","shadow","display","justifyContent","alignItems","height","width","ariaLabel","Title","p","theme","fontSizes","l","colors","text","title","children","as","pb","pt","NAME_MATCH","nameError","numberError","requiredError","schema","yup","shape","name","required","matches","number","Input","Field","borders","none","radii","normal","bgcButton","Label","m","fontWeights","bold","Error","s","accent","AddBtn","bgcStat","white","initialValues","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","handleSubmit","e","preventDefault","form","currentTarget","elements","value","matcheContactName","find","contact","toLowerCase","newContact","phone","toast","target","reset","validationSchema","autoComplete","onSubmit","htmlFor","type","pattern","render","msg","FilterLabel","FilterText","filter","useSelector","selectFilter","dispatch","useDispatch","onChange","changeFilter","Button","delBtn","id","useDeleteContactMutation","deleteContact","isDeleting","handleDelete","onClick","disabled","Contacts","ContactItem","EmptyList","isFetching","filteredContacts","includes","length","sort","firstName","secondName","localeCompare","map","PageTitle","xl","maxWidth","borderRadius","boxShadow","backgroundColor"],"sourceRoot":""}